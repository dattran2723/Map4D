<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bảnggiá" xml:space="preserve">
    <value>Price Table</value>
  </data>
  <data name="ChỉĐường" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="CôngTy" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="GiảiPháp" xml:space="preserve">
    <value>Solution</value>
  </data>
  <data name="GiớiThiệu1" xml:space="preserve">
    <value>The only map in Vietnam showing 4D maps in real time. Built from multiple layers of data, ready to connect and navigate to a smart city online. It aims to integrate multiple applications into one place for state management, business production for businesses and people.</value>
  </data>
  <data name="GửiNgayBâyGiờ" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="HọvàTên" xml:space="preserve">
    <value>Your name</value>
  </data>
  <data name="HỗTrợỨngDụng" xml:space="preserve">
    <value>Support your applications on the mobile platform (Android &amp; iOS) and the web. With features: location search, find directions, view weather, view maps in 2D / 3D mode, view maps by time and space (4D)</value>
  </data>
  <data name="Khámphá" xml:space="preserve">
    <value>Explore</value>
  </data>
  <data name="KhámPháDỊchVụ" xml:space="preserve">
    <value>Explore nearby amenities</value>
  </data>
  <data name="KhôngChỉ" xml:space="preserve">
    <value>Not only does it bring realistic imagery onto the 3D map, it also allows for interactive and customizable 3D objects</value>
  </data>
  <data name="LiênHệ" xml:space="preserve">
    <value>Contact with us</value>
  </data>
  <data name="Map4DDuocdonnhan" xml:space="preserve">
    <value>Map 4D is well received and trusted by hundreds of users around the world.</value>
  </data>
  <data name="MỗiĐiaiemBanToi" xml:space="preserve">
    <value>Each location you visit has the necessary support services. Map 4D with a huge location data warehouse, full of utilities, makes it easy to find and explore.</value>
  </data>
  <data name="Ngônngữ" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="NềntảngMap4D" xml:space="preserve">
    <value>4D Mapping Platform</value>
  </data>
  <data name="SảnPhẩm" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="TinNhắn" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Tiêuđề" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="TiệnÍchĐịaChỉ" xml:space="preserve">
    <value>Address Extension</value>
  </data>
  <data name="Trảinghiệmcùngmap4D" xml:space="preserve">
    <value>Experience with Map4D</value>
  </data>
  <data name="TrựcQuan3D" xml:space="preserve">
    <value>3D Visualization</value>
  </data>
  <data name="TàiLiệu" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="TínhNăngDẫnĐường" xml:space="preserve">
    <value>Navigation features help you get to where you are without having to know the exact location. Map 4D automatically calculates the shortest path between multiple points on the map, fully supports vehicles (walking, car pedals, motorcycles, cars).</value>
  </data>
  <data name="ĐaNềnTảng" xml:space="preserve">
    <value>Multi-platform</value>
  </data>
  <data name="Đăngký" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="ĐếnMọiNơiThậtDễDàng" xml:space="preserve">
    <value>It's easy to get anywhere</value>
  </data>
  <data name="Ứngdụng" xml:space="preserve">
    <value>Application</value>
  </data>
</root>